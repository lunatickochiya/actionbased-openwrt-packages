From 84d3116655bf3ed833a789f7e095790fb22afeb3 Mon Sep 17 00:00:00 2001
From: kiddin9 <48883331+kiddin9@users.noreply.github.com>
Date: Sat, 17 Dec 2022 10:27:49 +0800
Subject: [PATCH] update

---
 luci-app-passwall-smartdns-dev/Makefile                    |   7 +-
 .../luasrc/controller/passwall.lua            |  53 ++++++++
 .../model/cbi/passwall/client/global.lua      |   4 +-
 .../view/passwall/global/status_bottom.htm    | 124 ++++++++++++++++++
 .../root/etc/uci-defaults/luci-passwall       |   2 +
 5 files changed, 185 insertions(+), 5 deletions(-)
 create mode 100644 luci-app-passwall-smartdns-dev/luasrc/view/passwall/global/status_bottom.htm

diff --git a/luci-app-passwall-smartdns-dev/Makefile b/luci-app-passwall-smartdns-dev/Makefile
index ed9770f070..1fea4ee29b 100644
--- a/luci-app-passwall-smartdns-dev/Makefile
+++ b/luci-app-passwall-smartdns-dev/Makefile
@@ -35,6 +35,7 @@ PKG_CONFIG_DEPENDS:= \
 LUCI_TITLE:=LuCI support for PassWall
 LUCI_PKGARCH:=all
 LUCI_DEPENDS:=+coreutils +coreutils-base64 +coreutils-nohup +curl \
+	+lua-maxminddb +ipset +ipt2socks +iptables-mod-conntrack-extra +iptables-mod-iprange +iptables-mod-socket +iptables-mod-tproxy +kmod-ipt-nat \
 	+chinadns-ng +dns2socks +dns2tcp +ip-full +libuci-lua +lua +luci-compat +luci-lib-jsonc \
 	+microsocks +resolveip +tcping +unzip \
 	+PACKAGE_$(PKG_NAME)_INCLUDE_Brook:brook \
@@ -55,6 +56,6 @@ LUCI_DEPENDS:=+coreutils +coreutils-base64 +coreutils-nohup +curl \
 	+PACKAGE_$(PKG_NAME)_INCLUDE_Trojan_Plus:trojan-plus \
 	+PACKAGE_$(PKG_NAME)_INCLUDE_V2ray_Geodata:v2ray-geoip \
-	+PACKAGE_$(PKG_NAME)_INCLUDE_V2ray_Geodata:v2ray-geosite \
+	+v2ray-geosite \
 	+PACKAGE_$(PKG_NAME)_INCLUDE_V2ray_Plugin:v2ray-plugin \
 	+PACKAGE_$(PKG_NAME)_INCLUDE_Xray:xray-core \
 	+PACKAGE_$(PKG_NAME)_INCLUDE_Xray_Plugin:xray-plugin
@@ -150,7 +151,7 @@ config PACKAGE_$(PKG_NAME)_INCLUDE_Trojan_Plus
 
 config PACKAGE_$(PKG_NAME)_INCLUDE_V2ray_Geodata
 	bool "Include V2ray_Geodata"
-	default n
+	default y if aarch64||i386||x86_64
 
 config PACKAGE_$(PKG_NAME)_INCLUDE_V2ray_Plugin
 	bool "Include V2ray-Plugin (Shadowsocks Plugin)"
@@ -162,7 +163,7 @@ config PACKAGE_$(PKG_NAME)_INCLUDE_V2ray_Plugin
 
 config PACKAGE_$(PKG_NAME)_INCLUDE_Xray
 	bool "Include Xray"
-	default y if aarch64||arm||i386||x86_64
+	default y
 
 config PACKAGE_$(PKG_NAME)_INCLUDE_Xray_Plugin
 	bool "Include Xray-Plugin (Shadowsocks Plugin)"
diff --git a/luci-app-passwall-smartdns-dev/luasrc/controller/passwall.lua b/luci-app-passwall-smartdns-dev/luasrc/controller/passwall.lua
index e9c49d031c..c4ba6e1c70 100644
--- a/luci-app-passwall-smartdns-dev/luasrc/controller/passwall.lua
+++ b/luci-app-passwall-smartdns-dev/luasrc/controller/passwall.lua
@@ -20,6 +20,7 @@ function index()
 	entry({"admin", "services", appname, "reset_config"}, call("reset_config")).leaf = true
 	entry({"admin", "services", appname, "show"}, call("show_menu")).leaf = true
 	entry({"admin", "services", appname, "hide"}, call("hide_menu")).leaf = true
+	entry({"admin", "services", appname, "ip"}, call('check_ip')).leaf = true
 	if not nixio.fs.access("/etc/config/passwall") then return end
 	if nixio.fs.access("/etc/config/passwall_show") then
 		e = entry({"admin", "services", appname}, alias("admin", "services", appname, "settings"), _("Pass Wall"), -1)
@@ -194,6 +195,58 @@ function status()
 	luci.http.write_json(e)
 end
 
+function get_iso(ip)
+    local mm = require 'maxminddb'
+    local db = mm.open('/usr/share/passwall/GeoLite2-Country.mmdb')
+    local res = db:lookup(ip)
+    return string.lower(res:get('country', 'iso_code'))
+end
+
+function get_cname(ip)
+    local mm = require 'maxminddb'
+    local db = mm.open('/usr/share/passwall/GeoLite2-Country.mmdb')
+    local res = db:lookup(ip)
+    return string.lower(res:get('country', 'names', 'zh-CN'))
+end
+
+function check_site(host, port)
+    local nixio = require "nixio"
+    local socket = nixio.socket("inet", "stream")
+    socket:setopt("socket", "rcvtimeo", 2)
+    socket:setopt("socket", "sndtimeo", 2)
+    local ret = socket:connect(host, port)
+    socket:close()
+    return ret
+end
+
+-- 获取当前代理状态 与节点ip
+function check_ip()
+    local e = {}
+    local d = {}
+    local port = 80
+    local ip = luci.sys.exec('curl --retry 3 -m 10 -LfsA "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36" http://api.ipify.org/')
+    d.flag = 'un'
+    d.country = 'Unknown'
+    if (ip ~= '') then
+        local status, code = pcall(get_iso, ip)
+        if (status) then
+            d.flag = code
+        end
+        local status1, country = pcall(get_cname, ip)
+        if (status1) then
+            d.country = country
+        end
+    end
+    e.outboard = ip
+    e.outboardip = d
+    e.baidu = check_site('www.baidu.com', port)
+    e.taobao = check_site('www.taobao.com', port)
+    e.google = check_site('www.google.com', port)
+    e.youtube = check_site('www.youtube.com', port)
+    luci.http.prepare_content('application/json')
+    luci.http.write_json(e)
+end
+
 function haproxy_status()
 	local e = luci.sys.call(string.format("top -bn1 | grep -v grep | grep '%s/bin/' | grep haproxy >/dev/null", appname)) == 0
 	luci.http.prepare_content("application/json")
diff --git a/luci-app-passwall-smartdns-dev/luasrc/model/cbi/passwall/client/global.lua b/luci-app-passwall-smartdns-dev/luasrc/model/cbi/passwall/client/global.lua
index 0c33ccd90f..258da6a551 100644
--- a/luci-app-passwall-smartdns-dev/luasrc/model/cbi/passwall/client/global.lua
+++ b/luci-app-passwall-smartdns-dev/luasrc/model/cbi/passwall/client/global.lua
@@ -431,6 +431,7 @@ for k, v in pairs(nodes_table) do
     end
 end
 
+m:append(Template(appname .. "/global/status_bottom"))
 m:append(Template(appname .. "/global/footer"))
 
 return m
diff --git a/luci-app-passwall-smartdns-dev/luasrc/view/passwall/global/status_bottom.htm b/luci-app-passwall-smartdns-dev/luasrc/view/passwall/global/status_bottom.htm
new file mode 100644
index 0000000000..29de71618a
--- /dev/null
+++ b/luci-app-passwall-smartdns-dev/luasrc/view/passwall/global/status_bottom.htm
@@ -0,0 +1,128 @@
+<style>
+.pure-img {
+    max-height: 100%;
+    width: auto;
+}
+.flag .pure-img {
+    max-height: none;
+    margin-top: -0.34rem;
+}
+.status-bar {
+    position: fixed;
+    bottom: 0;
+    right: 0;
+    box-shadow: 0 0 2rem 0 rgba(136, 152, 170, .3);
+    color: #525f7f;
+    background: #fff;
+    z-index: 5;
+    box-sizing: border-box;
+}
+
+.status-bar .inner {
+    margin: 0.5em;
+}
+
+.status-bar .inner .flag {
+    height: 2.6em;
+    display: block;
+    float: left;
+    margin-right: 1em;
+}
+
+.status-bar .inner .status-info {
+    font-weight: bold;
+}
+
+.status-bar .icon-con {
+    height: 2.6em;
+    text-align: right;
+}
+
+#cbi-passwall+.cbi-page-actions.control-group.fixed {
+    bottom: 3.3rem;
+}
+
+footer{
+display:block !important;
+}
+    
+@media screen and (max-width: 700px) {
+.status-bar .icon-con {
+    height: 2.5em;
+}
+}
+</style>
+<script src="<%=media%>/js/jquery.min.js"></script>
+<script>
+if(typeof jQuery == 'undefined'){
+document.write('<script src="https://cdn.staticfile.org/jquery/2.2.4/jquery.min.js"><\/script>');
+}
+</script>
+<div class="status-bar">
+    <div class="inner">
+        <div class="pure-g">
+            <div class="pure-u-1-2">
+                <span class="flag"><img src="/luci-static/passwall/flags/loading.svg" class="pure-img"></span> <span
+                    class="status-info">获取中...</span>
+            </div>
+            <div class="pure-u-1-2">
+                <div class="icon-con">
+                    <img src="/luci-static/passwall/img/site_icon1_01.png" class="pure-img i1">
+                    <img src="/luci-static/passwall/img/site_icon1_02.png" class="pure-img i2">
+                    <img src="/luci-static/passwall/img/site_icon1_03.png" class="pure-img i3">
+                    <img src="/luci-static/passwall/img/site_icon1_04.png" class="pure-img i4">
+                </div>
+            </div>
+        </div>
+    </div>
+</div>
+
+
+<script>
+const _ASSETS = '/luci-static/passwall/';
+const CHECK_IP_URL = '<%=url([[admin]], [[services]], [[passwall]], [[ip]])%>';
+
+    var wW = $(window).width();
+
+    function resize() {
+        wW = $(window).width();
+        lw = $(".main-left").width()
+        $(".status-bar").width(wW - lw);
+        $(".status-bar .flag").width($(".status-bar .flag").height() / 3 * 4);
+
+        $(".flag-icon").each(function (index, el) {
+            if ($(el).height < 60) {
+                $(el).parent.height(60);
+                $(el).width(60)
+            } else {
+                $(el).width($(el).height());
+            }
+        });
+    }
+
+    function wirte_status(data) {
+        if (data.outboard) {
+            json = data.outboardip;
+            $(".flag img").attr("src", _ASSETS + "flags/" + json.flag + ".svg");
+            $(".status-info").html(data.outboard + "<br>" + json.country);
+        }
+        data.baidu ? $(".i1").attr("src", _ASSETS + "img/site_icon_01.png") : $(".i1").attr("src", _ASSETS + "img/site_icon1_01.png");
+        data.taobao ? $(".i2").attr("src", _ASSETS + "img/site_icon_02.png") : $(".i2").attr("src", _ASSETS + "img/site_icon1_02.png");
+        data.google ? $(".i3").attr("src", _ASSETS + "img/site_icon_03.png") : $(".i3").attr("src", _ASSETS + "img/site_icon1_03.png");
+        data.youtube ? $(".i4").attr("src", _ASSETS + "img/site_icon_04.png") : $(".i4").attr("src", _ASSETS + "img/site_icon1_04.png");
+        setTimeout(function () { $("body").trigger("iploaded", [true]); }, 200);
+    }
+    XHR.poll(5, CHECK_IP_URL, null,
+        function (x, data) {
+            wirte_status(data);
+        }
+    );
+
+    $(document).ready(function () {
+        resize();
+        $.getJSON(CHECK_IP_URL, wirte_status);
+    });
+
+    $(window).resize(resize);
+
+</script>
diff --git a/luci-app-passwall-smartdns-dev/root/etc/uci-defaults/luci-passwall b/luci-app-passwall-smartdns-dev/root/etc/uci-defaults/luci-passwall
index cc39c00a21..079c9723b3 100755
--- a/luci-app-passwall-smartdns-dev/root/etc/uci-defaults/luci-passwall
+++ b/luci-app-passwall-smartdns-dev/root/etc/uci-defaults/luci-passwall
@@ -1,5 +1,8 @@
 #!/bin/sh
 
+grep -q api.ipify.org /usr/share/passwall/rules/proxy_host ||
+	sed -i '$a api.ipify.org' /usr/share/passwall/rules/proxy_host
+
 uci -q batch <<-EOF >/dev/null
 	set dhcp.@dnsmasq[0].localuse=1
 	commit dhcp

--- a/luci-app-passwall-smartdns-dev/root/usr/share/passwall/0_default_config
+++ b/luci-app-passwall-smartdns-dev/root/usr/share/passwall/0_default_config
@@ -45,12 +46,12 @@ config global_other
 	option nodes_ping 'auto_ping tcping'
 
 config global_rules
-	option auto_update '0'
+	option auto_update '1'
 	option chnlist_update '1'
 	option chnroute_update '1'
 	option chnroute6_update '1'
 	option gfwlist_update '1'
-	option geosite_update '0'
+	option geosite_update '1'
 	option geoip_update '0'
 	list gfwlist_url 'https://fastly.jsdelivr.net/gh/Loyalsoldier/v2ray-rules-dat@release/gfw.txt'
 	list chnroute_url 'https://ispip.clang.cn/all_cn.txt'
--- a/luci-app-passwall-smartdns-dev/luasrc/model/cbi/passwall/client/type/sing-box.lua
+++ b/luci-app-passwall-smartdns-dev/luasrc/model/cbi/passwall/client/type/sing-box.lua
@@ -438,6 +438,7 @@ o = s:option(ListValue, option_name("transport"), translate("Transport"))
 o:value("tcp", "TCP")
 o:value("http", "HTTP")
 o:value("ws", "WebSocket")
+o:value("httpupgrade", "HTTPUpgrade")
 if singbox_tags:find("with_quic") then
 	o:value("quic", "QUIC")
 end
@@ -509,6 +510,14 @@ o:depends({ [option_name("ws_enableEarlyData")] = true })
 o = s:option(Value, option_name("ws_earlyDataHeaderName"), translate("Early data header name"), translate("Recommended value: Sec-WebSocket-Protocol"))
 o:depends({ [option_name("ws_enableEarlyData")] = true })

+-- [[ HTTPUpgrade部分 ]]--
+o = s:option(Value, option_name("httpupgrade_host"), translate("HTTPUpgrade Host"))
+o:depends({ [option_name("transport")] = "httpupgrade" })
+
+o = s:option(Value, option_name("httpupgrade_path"), translate("HTTPUpgrade Path"))
+o.placeholder = "/"
+o:depends({ [option_name("transport")] = "httpupgrade" })
+
 -- [[ gRPC部分 ]]--
 o = s:option(Value, option_name("grpc_serviceName"), "ServiceName")
 o:depends({ [option_name("transport")] = "grpc" })
diff --git a/luci-app-passwall-smartdns-dev/luasrc/model/cbi/passwall/server/type/sing-box.lua b/luci-app-passwall-smartdns-dev/luasrc/model/cbi/passwall/server/type/sing-box.lua
index 48e6832351..9b659b5994 100644
--- a/luci-app-passwall-smartdns-dev/luasrc/model/cbi/passwall/server/type/sing-box.lua
+++ b/luci-app-passwall-smartdns-dev/luasrc/model/cbi/passwall/server/type/sing-box.lua
@@ -310,6 +310,7 @@ o = s:option(ListValue, option_name("transport"), translate("Transport"))
 o:value("tcp", "TCP")
 o:value("http", "HTTP")
 o:value("ws", "WebSocket")
+o:value("httpupgrade", "HTTPUpgrade")
 o:value("quic", "QUIC")
 o:value("grpc", "gRPC")
 o:depends({ [option_name("protocol")] = "shadowsocks" })
@@ -333,6 +334,14 @@ o:depends({ [option_name("transport")] = "ws" })
 o = s:option(Value, option_name("ws_path"), translate("WebSocket Path"))
 o:depends({ [option_name("transport")] = "ws" })

+-- [[ HTTPUpgrade部分 ]]--
+
+o = s:option(Value, option_name("httpupgrade_host"), translate("HTTPUpgrade Host"))
+o:depends({ [option_name("transport")] = "httpupgrade" })
+
+o = s:option(Value, option_name("httpupgrade_path"), translate("HTTPUpgrade Path"))
+o:depends({ [option_name("transport")] = "httpupgrade" })
+
 -- [[ gRPC部分 ]]--
 o = s:option(Value, option_name("grpc_serviceName"), "ServiceName")
 o:depends({ [option_name("transport")] = "grpc" })
diff --git a/luci-app-passwall-smartdns-dev/luasrc/passwall/util_sing-box.lua b/luci-app-passwall-smartdns-dev/luasrc/passwall/util_sing-box.lua
index 1dbb25f84d..5c05ddb403 100644
--- a/luci-app-passwall-smartdns-dev/luasrc/passwall/util_sing-box.lua
+++ b/luci-app-passwall-smartdns-dev/luasrc/passwall/util_sing-box.lua
@@ -146,6 +146,14 @@ function gen_outbound(flag, node, tag, proxy_table)
 			}
 		end

+		if node.transport == "httpupgrade" then
+			v2ray_transport = {
+				type = "httpupgrade",
+				host = node.httpupgrade_host,
+				path = node.httpupgrade_path or "/",
+			}
+		end
+
 		if node.transport == "quic" then
 			v2ray_transport = {
 				type = "quic"
@@ -421,6 +429,14 @@ function gen_config_server(node)
 		}
 	end

+	if node.transport == "httpupgrade" then
+		v2ray_transport = {
+			type = "httpupgrade",
+			host = node.httpupgrade_host,
+			path = node.httpupgrade_path or "/",
+		}
+	end
+
 	if node.transport == "quic" then
 		v2ray_transport = {
 			type = "quic"
--- a/luci-app-passwall-smartdns-dev/luasrc/model/cbi/passwall/client/type/sing-box.lua
+++ b/luci-app-passwall-smartdns-dev/luasrc/model/cbi/passwall/client/type/sing-box.lua
@@ -542,8 +542,6 @@ o = s:option(Flag, option_name("mux"), translate("Mux"))
 o.rmempty = false
 o:depends({ [option_name("protocol")] = "vmess" })
 o:depends({ [option_name("protocol")] = "vless", [option_name("flow")] = "" })
-o:depends({ [option_name("protocol")] = "http" })
-o:depends({ [option_name("protocol")] = "socks" })
 o:depends({ [option_name("protocol")] = "shadowsocks", [option_name("uot")] = "" })
 o:depends({ [option_name("protocol")] = "trojan" })

@@ -554,13 +552,26 @@ o:value("h2mux")
 o:depends({ [option_name("mux")] = true })

 o = s:option(Value, option_name("mux_concurrency"), translate("Mux concurrency"))
-o.default = 8
-o:depends({ [option_name("mux")] = true })
+o.default = 4
+o:depends({ [option_name("mux")] = true, [option_name("tcpbrutal")] = false })

 o = s:option(Flag, option_name("mux_padding"), translate("Padding"))
 o.default = 0
 o:depends({ [option_name("mux")] = true })

+-- [[ TCP Brutal ]]--
+o = s:option(Flag, option_name("tcpbrutal"), translate("TCP Brutal"))
+o.default = 0
+o:depends({ [option_name("mux")] = true })
+
+o = s:option(Value, option_name("tcpbrutal_up_mbps"), translate("Max upload Mbps"))
+o.default = "10"
+o:depends({ [option_name("tcpbrutal")] = true })
+
+o = s:option(Value, option_name("tcpbrutal_down_mbps"), translate("Max download Mbps"))
+o.default = "50"
+o:depends({ [option_name("tcpbrutal")] = true })
+
 o = s:option(Flag, option_name("shadowtls"), "ShadowTLS")
 o.default = 0
 o:depends({ [option_name("protocol")] = "vmess", [option_name("tls")] = false })
diff --git a/luci-app-passwall-smartdns-dev/luasrc/model/cbi/passwall/server/type/sing-box.lua b/luci-app-passwall-smartdns-dev/luasrc/model/cbi/passwall/server/type/sing-box.lua
index 9b659b5994..50a084286a 100644
--- a/luci-app-passwall-smartdns-dev/luasrc/model/cbi/passwall/server/type/sing-box.lua
+++ b/luci-app-passwall-smartdns-dev/luasrc/model/cbi/passwall/server/type/sing-box.lua
@@ -346,6 +346,27 @@ o:depends({ [option_name("transport")] = "httpupgrade" })
 o = s:option(Value, option_name("grpc_serviceName"), "ServiceName")
 o:depends({ [option_name("transport")] = "grpc" })

+-- [[ Mux ]]--
+o = s:option(Flag, option_name("mux"), translate("Mux"))
+o.rmempty = false
+o:depends({ [option_name("protocol")] = "vmess" })
+o:depends({ [option_name("protocol")] = "vless", [option_name("flow")] = "" })
+o:depends({ [option_name("protocol")] = "shadowsocks" })
+o:depends({ [option_name("protocol")] = "trojan" })
+
+-- [[ TCP Brutal ]]--
+o = s:option(Flag, option_name("tcpbrutal"), translate("TCP Brutal"))
+o.default = 0
+o:depends({ [option_name("mux")] = true })
+
+o = s:option(Value, option_name("tcpbrutal_up_mbps"), translate("Max upload Mbps"))
+o.default = "10"
+o:depends({ [option_name("tcpbrutal")] = true })
+
+o = s:option(Value, option_name("tcpbrutal_down_mbps"), translate("Max download Mbps"))
+o.default = "50"
+o:depends({ [option_name("tcpbrutal")] = true })
+
 o = s:option(Flag, option_name("bind_local"), translate("Bind Local"), translate("When selected, it can only be accessed locally, It is recommended to turn on when using reverse proxies or be fallback."))
 o.default = "0"

diff --git a/luci-app-passwall-smartdns-dev/luasrc/passwall/util_sing-box.lua b/luci-app-passwall-smartdns-dev/luasrc/passwall/util_sing-box.lua
index 5c05ddb403..e49ec99465 100644
--- a/luci-app-passwall-smartdns-dev/luasrc/passwall/util_sing-box.lua
+++ b/luci-app-passwall-smartdns-dev/luasrc/passwall/util_sing-box.lua
@@ -116,10 +116,15 @@ function gen_outbound(flag, node, tag, proxy_table)
 			mux = {
 				enabled = true,
 				protocol = node.mux_type or "h2mux",
-				max_connections = tonumber(node.mux_concurrency) or 4,
+				max_connections = ( (node.tcpbrutal == "1") and 1 ) or tonumber(node.mux_concurrency) or 4,
 				padding = (node.mux_padding == "1") and true or false,
 				--min_streams = 4,
 				--max_streams = 0,
+				brutal = {
+					enabled = (node.tcpbrutal == "1") and true or false,
+					up_mbps = tonumber(node.tcpbrutal_up_mbps) or 10,
+					down_mbps = tonumber(node.tcpbrutal_down_mbps) or 50,
+				},
 			}
 		end

@@ -410,6 +415,19 @@ function gen_config_server(node)
 		}
 	end

+	local mux = nil
+	if node.mux == "1" then
+		mux = {
+			enabled = true,
+			padding = (node.mux_padding == "1") and true or false,
+			brutal = {
+				enabled = (node.tcpbrutal == "1") and true or false,
+				up_mbps = tonumber(node.tcpbrutal_up_mbps) or 10,
+				down_mbps = tonumber(node.tcpbrutal_down_mbps) or 50,
+			},
+		}
+	end
+
 	local v2ray_transport = nil

 	if node.transport == "http" then
@@ -499,6 +517,7 @@ function gen_config_server(node)
 		protocol_table = {
 			method = node.method,
 			password = node.password,
+			multiplex = mux,
 		}
 	end

@@ -515,6 +534,7 @@ function gen_config_server(node)
 			protocol_table = {
 				users = users,
 				tls = (node.tls == "1") and tls or nil,
+				multiplex = mux,
 				transport = v2ray_transport,
 			}
 		end
@@ -533,6 +553,7 @@ function gen_config_server(node)
 			protocol_table = {
 				users = users,
 				tls = (node.tls == "1") and tls or nil,
+				multiplex = mux,
 				transport = v2ray_transport,
 			}
 		end
@@ -552,6 +573,7 @@ function gen_config_server(node)
 				tls = (node.tls == "1") and tls or nil,
 				fallback = nil,
 				fallback_for_alpn = nil,
+				multiplex = mux,
 				transport = v2ray_transport,
 			}
 		end
--- a/luci-app-passwall-smartdns-dev/luasrc/model/cbi/passwall/client/type/hysteria2.lua
+++ b/luci-app-passwall-smartdns-dev/luasrc/model/cbi/passwall/client/type/hysteria2.lua
@@ -44,6 +44,9 @@ o = s:option(Value, option_name("tls_serverName"), translate("Domain"))
 o = s:option(Flag, option_name("tls_allowInsecure"), translate("allowInsecure"), translate("Whether unsafe connections are allowed. When checked, Certificate validation will be skipped."))
 o.default = "0"

+o = s:option(Value, option_name("tls_pinSHA256"), translate("PinSHA256"),translate("Certificate fingerprint"))
+o.rewrite_option = o.option
+
 o = s:option(Value, option_name("up_mbps"), translate("Max upload Mbps"))
 o.rewrite_option = o.option

diff --git a/luci-app-passwall-smartdns-dev/luasrc/passwall/util_hysteria2.lua b/luci-app-passwall-smartdns-dev/luasrc/passwall/util_hysteria2.lua
index a96d1f2f2d..54f723f85f 100644
--- a/luci-app-passwall-smartdns-dev/luasrc/passwall/util_hysteria2.lua
+++ b/luci-app-passwall-smartdns-dev/luasrc/passwall/util_hysteria2.lua
@@ -77,7 +77,8 @@ function gen_config(var)
 		auth = node.hysteria2_auth_password,
 		tls = {
 			sni = node.tls_serverName,
-			insecure = (node.tls_allowInsecure == "1") and true or false
+			insecure = (node.tls_allowInsecure == "1") and true or false,
+			pinSHA256 = (node.hysteria2_tls_pinSHA256) and node.hysteria2_tls_pinSHA256 or nil,
 		},
 		quic = {
 			initStreamReceiveWindow = (node.hysteria2_recv_window) and tonumber(node.hysteria2_recv_window) or nil,
diff --git a/luci-app-passwall-smartdns-dev/po/zh-cn/passwall.po b/luci-app-passwall-smartdns-dev/po/zh-cn/passwall.po
index ec62291768..1483e14602 100644
--- a/luci-app-passwall-smartdns-dev/po/zh-cn/passwall.po
+++ b/luci-app-passwall-smartdns-dev/po/zh-cn/passwall.po
@@ -514,6 +514,12 @@ msgstr "认证密码"
 msgid "Commands the client to use the BBR flow control algorithm"
 msgstr "命令客户端使用 BBR 流量控制算法"

+msgid "PinSHA256"
+msgstr "PinSHA256"
+
+msgid "Certificate fingerprint"
+msgstr "证书指纹"
+
 msgid "Max upload Mbps"
 msgstr "最大上行(Mbps)"

